server {
    listen 9631 ssl;
    listen 10002 ssl;
    server_name ssai.samsungds.net;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Global CORS headers
    add_header Access-Control-Allow-Origin $http_origin always;
    add_header Access-Control-Allow-Credentials true always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
    add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,Accept,Origin" always;

    # Handle preflight requests
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,Accept,Origin" always;
        add_header Access-Control-Max-Age 1728000 always;
        add_header Content-Type 'text/plain; charset=utf-8' always;
        add_header Content-Length 0 always;
        return 204;
    }

    # Frontend
    location / {
        proxy_pass http://frontend:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # /api/posts → backend /api/v1/mcp-servers/?status=approved (메인 화면용)
    location = /api/posts {
        # 디버깅을 위한 로그
        access_log /var/log/nginx/api_posts.log;
        error_log /var/log/nginx/api_posts_error.log debug;
        
        proxy_pass http://backend:10001/api/v1/mcp-servers/?status=approved;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
        
        # 응답 헤더 추가
        add_header X-Debug-Path "/api/posts" always;
        add_header X-Debug-Backend "http://backend:10001/api/v1/mcp-servers/?status=approved" always;
    }

    # /api/mcps → backend /api/v1/mcp-servers (MCP 서버 CRUD)
    location ^~ /api/mcps {
        rewrite ^/api/mcps(/.*)?$ /api/v1/mcp-servers$1 break;
        proxy_pass http://backend:10001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
    }

    # /api/mcp-servers → backend /api/v1/mcp-servers (사용자별, 관리자 기능)
    location ^~ /api/mcp-servers {
        rewrite ^/api/mcp-servers(/.*)?$ /api/v1/mcp-servers$1 break;
        proxy_pass http://backend:10001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
    }

    # 모든 API 요청 처리 /api/... → /api/v1/... (기본 라우팅)
    location /api/ {
        rewrite ^/api/(.*)$ /api/v1/$1 break;
        proxy_pass http://backend:10001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
    }
} 